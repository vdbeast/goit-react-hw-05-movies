{"version":3,"file":"static/js/681.23a7b6b3.chunk.js","mappings":"6LAoCA,UAhCe,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0CF,EAAAA,EAAAA,WAAS,GAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAkBR,GACbS,MAAK,SAACC,GACHN,EAAWM,EAASC,KAAKC,SACzBN,GAAiB,EACpB,IACAO,OAAM,SAAAC,GACHC,QAAQD,MAAM,gCAAiCA,EAClD,GACR,GAAE,CAACd,KAGA,4BACI,qCACA,0BACKK,GAAoC,IAAnBF,EAAQa,SAAgB,oEACzCb,EAAQc,KAAI,SAAAC,GAAM,OACf,2BACI,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFNF,EAAOG,GADD,SASlC,C","sources":["components/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fetchMovieReviews } from './services';\nimport { useParams } from 'react-router-dom';\n\nconst Review = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [reviewsLoaded, setReviewsLoaded] = useState(false);\n\n    useEffect(() => {\n        fetchMovieReviews(movieId)\n            .then((response) => {\n                setReviews(response.data.results);\n                setReviewsLoaded(true);\n            })\n            .catch(error => {\n                console.error('Error fetching movie reviews:', error);\n            });\n    }, [movieId]);\n\n    return (\n        <div>\n            <h3>Reviews</h3>\n            <ul>\n                {reviewsLoaded && reviews.length === 0 && <p>We don`t have any reviews for this movie</p>}\n                {reviews.map(review => (\n                    <li key={review.id}>\n                        <b>Author: {review.author}</b>\n                        <p>{review.content}</p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Review;"],"names":["movieId","useParams","useState","reviews","setReviews","reviewsLoaded","setReviewsLoaded","useEffect","fetchMovieReviews","then","response","data","results","catch","error","console","length","map","review","author","content","id"],"sourceRoot":""}